{
    parserClass="com.tbusk.vala_plugin.ValaParser"

    extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

    psiClassPrefix="Vala"
    psiImplClassSuffix="Impl"
    psiPackage="com.tbusk.vala_plugin.psi"
    psiImplPackage="com.tbusk.vala_plugin.psi.impl"

    elementTypeHolderClass="com.tbusk.vala_plugin.psi.ValaTypes"
    elementTypeClass="com.tbusk.vala_plugin.psi.ValaElementType"
    tokenTypeClass="com.tbusk.vala_plugin.psi.ValaTokenType"

    tokens=[
        SEMICOLON=";"
        COMMA=","
        DOT="."
        LPAREN="("
        RPAREN=")"
        LBRACE="{"
        RBRACE="}"
        LBRACKET="["
        RBRACKET="]"
        AT="@"
        QUESTION_MARK="?"
        COLON=":"
        EQUALS="="
        PLUS="+"
        MINUS="-"
        MULTIPLY="*"
        DIVIDE="/"
        INCREMENT="++"
        DECREMENT="--"
        MODULO="%"
        PLUS_EQUALS="+="
        MINUS_EQUALS="-="
        MULTIPLY_EQUALS="*="
        DIVIDE_EQUALS="/="
        MODULO_EQUALS="%="
        AND="&&"
        OR="||"
        NOT="!"
        DOUBLE_EQUALS="=="
        NOT_EQUALS="!="

        NAMESPACE="namespace"
        COMMENT="regex://.*"
    ]
}

root ::= items*

private items ::= (comments | statement | namespace_statement | WHITESPACE)*
private items

comments ::=  COMMENT | DOC_COMMENT | BLOCK_COMMENT

// Standard Elements
statement ::= (IDENTIFIER | STRING_LITERAL | NUMBER | tokens) ";"?

// namespace declaration
namespace_statement ::= NAMESPACE_STATEMENT IDENTIFIER LBRACE expression* RBRACE