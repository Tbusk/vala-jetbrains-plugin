{
    parserClass="com.tbusk.vala_plugin.ValaParser"

    extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

    psiClassPrefix="Vala"
    psiImplClassSuffix="Impl"
    psiPackage="com.tbusk.vala_plugin.psi"
    psiImplPackage="com.tbusk.vala_plugin.psi.impl"

    elementTypeHolderClass="com.tbusk.vala_plugin.psi.ValaTypes"
    elementTypeClass="com.tbusk.vala_plugin.psi.ValaElementType"
    tokenTypeClass="com.tbusk.vala_plugin.psi.ValaTokenType"

    tokens=[
        DOT='.'
        COMMA=','
        SEMICOLON=';'
        EQUALS="="
        LBRACE='{'
        RBRACE='}'
        COLON=':'
        LPAREN='('
        RPAREN=')'
        LBRACKET='['
        RBRACKET=']'
        QUESTION_MARK='?'
        AT='@'
        UNDERSCORE='_'
        GREATER_THAN='>'
        LESS_THAN='<'
        PLUS='+'
        MINUS='-'
        STAR='*'
        FORWARD_SLASH='/'
        BACKSLASH='\\'
        PERCENT='%'
        AND='&'
        PIPE='|'
        EXCLAMATION='!'
        TILDE='~'
        CARET='^'
        BACKTICK='`'
        DOLLAR='$'
        POUND='#'

        IDENTIFIER='regexp:[a-zA-Z_][a-zA-Z0-9_]*'
        CONSTANT='regexp:[A-Z_][A-Z0-9_]*'
        WHITESPACE='regexp:\s+'
        STRING_LITERAL='regexp:\"([^"\\]|\\.)*\"'
        CHAR_LITERAL="regexp:'([^'\\]|\\.)'"
        NUMBER='regexp:\d+'
        COMMENT='regexp://.*'
        BLOCK_COMMENT='regexp:/[^*]\*+([^/*][^*]*\*+)*/'
        DOC_COMMENT='regexp:/[^*]*\*+([^/*][^*]*\*+)*/'
        EMPTY='regexp:\s*'
        METHOD_CALL='regexp:[a-zA-Z_][a-zA-Z0-9_]* (\s+)*\('
    ]
}

Root ::= Items*

Items ::= Keywords | Comments | Identifiers | Symbols

private Symbols ::= DOT
                 | COMMA
                 | SEMICOLON
                 | EQUALS
                 | LBRACE
                 | RBRACE
                 | COLON
                 | LPAREN
                 | RPAREN
                 | LBRACKET
                 | RBRACKET
                 | QUESTION_MARK
                 | AT
                 | UNDERSCORE
                 | GREATER_THAN
                 | LESS_THAN
                 | PLUS
                 | MINUS
                 | STAR
                 | FORWARD_SLASH
                 | PERCENT
                 | AND
                 | PIPE
                 | EXCLAMATION
                 | TILDE
                 | CARET
                 | BACKTICK
                 | DOLLAR
                 | POUND
                 | BACKSLASH



private Comments ::= COMMENT
                  | BLOCK_COMMENT
                  | DOC_COMMENT

private Identifiers ::= IDENTIFIER
                     | STRING_LITERAL
                     | CHAR_LITERAL
                     | NUMBER
                     | WHITESPACE
                     | EMPTY
                     | CONSTANT
                     | METHOD_CALL

private Keywords ::= Types
                  | IfStatement
                  | CInstructions
                  | GObjects
                  | AccessModifiers
                  | while
                  | for
                  | do
                  | switch
                  | case
                  | default
                  | break
                  | continue
                  | return
                  | goto
                  | sizeof
                  | typedef
                  | struct
                  | union
                  | enum
                  | class
                  | interface
                  | static
                  | abstract
                  | virtual
                  | override
                  | namespace
                  | foreach
                  | in
                  | try
                  | catch
                  | finally
                  | throw
                  | throws
                  | new
                  | delete
                  | this
                  | null
                  | true
                  | false
                  | const
                  | volatile
                  | assert
                  | var
                  | void
                  | owned
                  | unowned
                  | using
                  | construct
                  | yield
                  | async
                  | base
                  | is
                  | as
                  | typeof
                  | delegate
                  | signal
                  | errordomain
                  | requires
                  | ensures
                  | lock
                  | weak
                  | extern

private AccessModifiers ::= public
                         | private
                         | protected
                         | internal

private CInstructions ::= CCode
                        | Version
                        | DBus

private GObjects ::= HashMap
                  | Object


private IfStatement ::= if
                     | endif
                     | elif
                     | else

private Types ::= string
               | char
               | uchar
               | unichar
               | int
               | uint
               | long
               | ulong
               | short
               | ushort
               | int8
               | int16
               | int32
               | int64
               | uint8
               | uint16
               | uint32
               | uint64
               | float
               | double
               | bool
               | size_t
               | ssize_t
